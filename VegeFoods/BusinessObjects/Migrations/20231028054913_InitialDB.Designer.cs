// <auto-generated />
using System;
using BusinessObjects;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObjects.Migrations
{
    [DbContext(typeof(VegeFoodDBContext))]
    [Migration("20231028054913_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessObjects.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Root"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Fruit"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Leafy Greens"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Mushrooms"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Herbs"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BusinessObjects.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusinessObjects.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BusinessObjects.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "This is carrot",
                            ProductImage = "https://5.imimg.com/data5/SELLER/Default/2023/3/WB/RV/ZG/137288736/12818-1-500x500.webp",
                            ProductName = "Carrot",
                            UnitInStock = 1000,
                            UnitPrice = 5000m
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Description = "Fresh apples",
                            ProductImage = "https://media.istockphoto.com/id/184276818/photo/red-apple.jpg?s=612x612&w=0&k=20&c=NvO-bLsG0DJ_7Ii8SSVoKLurzjmV0Qi4eGfn6nW3l5w=",
                            ProductName = "Apple",
                            UnitInStock = 800,
                            UnitPrice = 3000m
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Description = "Ripe bananas",
                            ProductImage = "https://fruitboxco.com/cdn/shop/products/asset_2_1024x.jpg?v=1571839043",
                            ProductName = "Banana",
                            UnitInStock = 1200,
                            UnitPrice = 2500m
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Description = "Juicy oranges",
                            ProductImage = "https://d2b5e9fzla1xs8.cloudfront.net/media/images/products/2021/03/3007.jpg",
                            ProductName = "Orange",
                            UnitInStock = 600,
                            UnitPrice = 3500m
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            Description = "Sweet grapes",
                            ProductImage = "https://media.istockphoto.com/id/1158975684/photo/grapes-red-grape-grape-branch-isolated-on-white.jpg?s=612x612&w=0&k=20&c=9A8zhyTwckgPjTbIZUm_9DDJEWKJqBp1p2f0YqZ2FQA=",
                            ProductName = "Grapes",
                            UnitInStock = 500,
                            UnitPrice = 4500m
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2,
                            Description = "Fresh watermelon",
                            ProductImage = "https://natureandnurtureseeds.com/cdn/shop/products/046_final_cropped_for_website.jpg?v=1579884015",
                            ProductName = "Watermelon",
                            UnitInStock = 300,
                            UnitPrice = 6000m
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 2,
                            Description = "Delicious strawberries",
                            ProductImage = "https://cdn.britannica.com/20/174520-050-64C6FD6B/Cartons-strawberries-farmers-market.jpg",
                            ProductName = "Strawberry",
                            UnitInStock = 700,
                            UnitPrice = 5500m
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 2,
                            Description = "Tropical pineapple",
                            ProductImage = "https://www.allrecipes.com/thmb/SbBpjqfquAd7LkvL7O3MbeccniA=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/GettyImages-1178065904-2000-6f4d99c79ab94b0e85d2a64794a09adc.jpg",
                            ProductName = "Pineapple",
                            UnitInStock = 400,
                            UnitPrice = 4800m
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 2,
                            Description = "Exotic mangoes",
                            ProductImage = "https://post.medicalnewstoday.com/wp-content/uploads/sites/3/2022/01/mangoes_what_to_know_732x549_thumb-732x549.jpg",
                            ProductName = "Mango",
                            UnitInStock = 600,
                            UnitPrice = 5200m
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 2,
                            Description = "Fresh lemons",
                            ProductImage = "https://www.tastingtable.com/img/gallery/31-types-of-lemons-and-what-makes-them-unique/l-intro-1656086555.jpg",
                            ProductName = "Lemon",
                            UnitInStock = 900,
                            UnitPrice = 2800m
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 3,
                            Description = "Fresh Spinach",
                            ProductImage = "https://freshji.in/wp-content/uploads/2020/09/Spinach-1.jpg",
                            ProductName = "Spinach",
                            UnitInStock = 1000,
                            UnitPrice = 5100m
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 3,
                            Description = "Fresh Watercress",
                            ProductImage = "https://www.kitchengardenseeds.com/media/catalog/product/cache/0e0f8b55cb1429f46d7faa85732ae262/w/a/watercress-w.jpg",
                            ProductName = "Watercress",
                            UnitInStock = 1000,
                            UnitPrice = 6300m
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 3,
                            Description = "Fresh Romaine",
                            ProductImage = "https://cdn-prod.medicalnewstoday.com/content/images/articles/319/319725/romaine-lettuce-on-wooden-chopping-board.jpg",
                            ProductName = "Romaine",
                            UnitInStock = 1000,
                            UnitPrice = 4500m
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 3,
                            Description = "Fresh Greens",
                            ProductImage = "https://www.highmowingseeds.com/media/catalog/product/cache/6cbdb003cf4aae33b9be8e6a6cf3d7ad/2/4/2485-1.jpg",
                            ProductName = "Mustard Greens",
                            UnitInStock = 1000,
                            UnitPrice = 7000m
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 3,
                            Description = "Fresh Bok Choy",
                            ProductImage = "https://www.veggycation.com.au/siteassets/veggycationvegetable/bok-choy.jpg",
                            ProductName = "Bok Choy",
                            UnitInStock = 1000,
                            UnitPrice = 3000m
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 3,
                            Description = "Fresh Swiss Chard",
                            ProductImage = "https://5.imimg.com/data5/SELLER/Default/2023/3/WB/RV/ZG/137288736/12818-1-500x500.webp",
                            ProductName = "Swiss Chard",
                            UnitInStock = 1000,
                            UnitPrice = 7000m
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 3,
                            Description = "Fresh Collard Greens",
                            ProductImage = "https://mountaingirl.camp/wp-content/uploads/2020/08/how-to-cook-collard-greens.png",
                            ProductName = "Collard Greens",
                            UnitInStock = 1000,
                            UnitPrice = 6000m
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 3,
                            Description = "Fresh Arugula",
                            ProductImage = "https://www.highmowingseeds.com/media/catalog/product/cache/6cbdb003cf4aae33b9be8e6a6cf3d7ad/2/0/2005-1.jpg",
                            ProductName = "Arugula",
                            UnitInStock = 1000,
                            UnitPrice = 6600m
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 3,
                            Description = "Fresh Lettuce",
                            ProductImage = "https://zipgrow.com/wp-content/uploads/2022/05/Lettuce-Head-scaled-1.jpeg",
                            ProductName = "Lettuce",
                            UnitInStock = 1000,
                            UnitPrice = 7700m
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 3,
                            Description = "Fresh Kale",
                            ProductImage = "https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/Boerenkool.jpg/1200px-Boerenkool.jpg",
                            ProductName = "Kale",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 4,
                            Description = "Fresh Button Mushroom",
                            ProductImage = "https://www.thespruceeats.com/thmb/PDnFtFMkfMsRBC1XqhCv0OP-J6I=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/what-are-button-mushrooms-5197530-hero-06-3d46a10b9e924f67849d5e7a049a6a2d.jpg",
                            ProductName = "Button Mushroom",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 4,
                            Description = "Fresh Shiitake Mushroom",
                            ProductImage = "https://cdn.britannica.com/47/182647-050-EA329FC3/shiitake-mushrooms.jpg",
                            ProductName = "Shiitake Mushroom",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 4,
                            Description = "Fresh Portobello Mushroom",
                            ProductImage = "https://upload.wikimedia.org/wikipedia/commons/3/3e/Portobello_mushrooms.jpg",
                            ProductName = "Portobello Mushroom",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 4,
                            Description = "Fresh Morel Mushroom",
                            ProductImage = "https://static01.nyt.com/images/2022/04/11/science/00SCI-MORELS3/merlin_205361283_e07e1753-e0bd-4eff-8c45-35442cb8c8d1-mediumSquareAt3X.jpg",
                            ProductName = "Morel Mushroom",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 4,
                            Description = "Fresh Chanterelle Mushroom",
                            ProductImage = "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Chanterelle_Cantharellus_cibarius.jpg/1023px-Chanterelle_Cantharellus_cibarius.jpg",
                            ProductName = "Chanterelle Mushroom",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 5,
                            Description = "Fresh basil",
                            ProductImage = "https://images.pexels.com/photos/1087902/pexels-photo-1087902.jpeg?cs=srgb&dl=pexels-monicore-1087902.jpg&fm=jpg",
                            ProductName = "Basil",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 5,
                            Description = "Fresh Parsley",
                            ProductImage = "https://cdn.britannica.com/63/193863-050-0EC30803/Parsley.jpg",
                            ProductName = "Parsley",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 5,
                            Description = "Fresh Cilantro",
                            ProductImage = "https://images.cookforyourlife.org/wp-content/uploads/2018/08/shutterstock_224264125-min.jpg",
                            ProductName = "Cilantro",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 5,
                            Description = "Fresh Rosemary",
                            ProductImage = "https://m.media-amazon.com/images/I/61L6xhYXiuL._AC_UF1000,1000_QL80_.jpg",
                            ProductName = "Rosemary",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 5,
                            Description = "Fresh Mint",
                            ProductImage = "https://assets.epicurious.com/photos/5763132cff66dde1456dfed0/4:3/w_1768,h_1326,c_limit/Mint_Leaves.jpg",
                            ProductName = "Mint",
                            UnitInStock = 1000,
                            UnitPrice = 8800m
                        });
                });

            modelBuilder.Entity("BusinessObjects.User", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            Address = "Hanoi",
                            Email = "admin@gmail.com",
                            FullName = "Admin Nguyen",
                            Password = "123456",
                            Phone = "0969999999",
                            UserName = "admin",
                            role = "Admin"
                        },
                        new
                        {
                            AccountId = 2,
                            Address = "Hanoi",
                            Email = "kien@gmail.com",
                            FullName = "Kien Tran",
                            Password = "1234",
                            Phone = "0838776396",
                            UserName = "kien",
                            role = "Customer"
                        },
                        new
                        {
                            AccountId = 3,
                            Address = "Hanoi",
                            Email = "tung@gmail.com",
                            FullName = "Tung Hoang",
                            Password = "5678",
                            Phone = "0838776369",
                            UserName = "tung",
                            role = "Customer"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Comment", b =>
                {
                    b.HasOne("BusinessObjects.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.User", "User")
                        .WithMany()
                        .HasForeignKey("UserAccountId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Order", b =>
                {
                    b.HasOne("BusinessObjects.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BusinessObjects.OrderDetail", b =>
                {
                    b.HasOne("BusinessObjects.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BusinessObjects.Product", b =>
                {
                    b.HasOne("BusinessObjects.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
